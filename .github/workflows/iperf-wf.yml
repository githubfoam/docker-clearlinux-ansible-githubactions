name: "iperf clearlinux docker CI workflow"


on:
  push:
    branches: [ test ]
  schedule:
      # https://crontab.guru/examples.html #every friday at midnight  
      - cron:  '0 0 * * FRI' 
jobs:

  ubuntu-latest-2110-job:
    name: "docker  ansible clearlinux"
    runs-on: ubuntu-latest
    env:
      version: "latest"
      name: "clearlinux/iperf"
      dockerdir: "dockerfiles"
      dockerfile: "Dockerfile.clearlinux.iperf" 
      playbookfile: "clearlinux.yml"               
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: |
        hostnamectl status
        lsb_release -a
        lsb_release -d
        cat /etc/lsb-release
        cat /etc/issue
        cat /etc/os-release
        sudo apt-get install -y neofetch && neofetch    
    - name: "playbook docker clearlinux"
      run: |
          # destroyed afterwards (use --rm )
          # all subsequent Dockerfile commands generate new images and the cache is not used
          sudo docker build --no-cache --rm  -t ${name}:${version}  . --file ${dockerdir}/${dockerfile}
          docker image ls
          docker run -it --rm --name=iperf-srv -p 5201:5201 clearlinux/iperf -s &
          docker network ls
          # get network id of bridge
          docker network inspect $(docker network ls | grep "bridge" | awk '/ / { print $1 }')
          docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' iperf-srv